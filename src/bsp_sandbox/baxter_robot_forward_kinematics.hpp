#pragma once

#include "baxter_robot.hpp"

namespace BaxterRobotBSP {
  Vector3d forward_kinematics(const StateT& state) {
    Matrix<double,9,1> eerot;
    Vector3d eetrans;
		double x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,x101,x102,x103,x104;
		x0=-0.707103562373095;
		x1=-0.707109999985348;
		x2=cos((double)state[0]);
		x3=sin((double)state[0]);
		x4=cos((double)state[2]);
		x5=sin((double)state[1]);
		x6=sin((double)state[2]);
		x7=sin((double)state[3]);
		x8=cos((double)state[1]);
		x9=cos((double)state[3]);
		x10=cos((double)state[4]);
		x11=sin((double)state[4]);
		x12=cos((double)state[5]);
		x13=sin((double)state[5]);
		x14=cos((double)state[6]);
		x15=sin((double)state[6]);
		x16=((0.01)*x4);
		x17=((-1.0)*x15);
		x18=((-1.0)*x10);
		x19=((-1.0)*x1*x14);
		x20=(x1*x17);
		x21=((1.0)*x3);
		x22=((-1.0)*x13);
		x23=((0.229525)*x7);
		x24=((0.0487901458037436)*x6);
		x25=(x0*x17);
		x26=((-1.0)*x2);
		x27=((-1.0)*x0*x14);
		x28=((-1.0)*x0*x12);
		x29=((-1.0)*x1*x12);
		x30=((-1.0)*x11);
		x31=((0.048790589998989)*x5);
		x32=((0.048790589998989)*x3);
		x33=((0.25768502619466)*x8);
		x34=((0.0487901458037436)*x5);
		x35=((0.37429)*x5);
		x36=(x7*x8);
		x37=((-1.0)*x2);
		x38=(x8*x9);
		x39=(x2*x4);
		x40=((-1.0)*x3);
		x41=((-1.0)*x11);
		x42=(x6*x8);
		x43=(x5*x6);
		x44=(x5*x7);
		x45=(x3*x4);
		x46=(x21*x4*x5);
		x47=(x37*x43);
		x48=(x37*x38);
		x49=(x38*x40);
		x50=(((x3*x6))+((x39*x5)));
		x51=(x39+((x3*x43)));
		x52=(((x36*x4))+((x5*x9)));
		x53=(((x26*x6))+x46);
		x54=(x45+x47);
		x55=((((-1.0)*x38*x4))+x44);
		x56=((((1.0)*x39*x5))+((x21*x6)));
		x57=((((1.0)*x39))+((x21*x43)));
		x58=(((x21*x4))+x47);
		x59=((((-0.01)*x2*x43))+((x16*x3)));
		x60=(((x35*x45))+(((-0.37429)*x2*x6)));
		x61=(x11*x51);
		x62=(x12*x52);
		x63=(x50*x7);
		x64=(x53*x9);
		x65=(x53*x7);
		x66=(x11*x57);
		x67=(x60*x7);
		x68=(x56*x7);
		x69=(x56*x9);
		x70=((1.0)*x10*x57);
		x71=(x64+((x3*x36)));
		x72=(((x10*x55))+((x11*x42)));
		x73=(x65+x49);
		x74=((((-1.0)*x64))+(((-1.0)*x21*x36)));
		x75=(x69+((x2*x36)));
		x76=((((-1.0)*x64))+((x36*x40)));
		x77=(x68+x48);
		x78=((((-1.0)*x10*x42))+(((1.0)*x11*x55)));
		x79=((((-1.0)*x69))+((x36*x37)));
		x80=((((1.0)*x68))+x48);
		x81=((((-0.229525)*x2*x38))+((x23*x56)));
		x82=(((x23*((((x37*x6))+x46))))+(((-0.229525)*x3*x38)));
		x83=(x13*x73);
		x84=(x10*x75);
		x85=(x13*x77);
		x86=(x12*x80);
		x87=(x12*x82);
		x88=(x10*x79);
		x89=(((x12*x72))+((x13*x52)));
		x90=(x66+((x10*x74)));
		x91=(((x10*x76))+x66);
		x92=((((-1.0)*x11*x79))+(((-1.0)*x10*x54)));
		x93=(x88+((x30*x58)));
		x94=(((x18*x54))+((x30*x79)));
		x95=(x70+((x41*x74)));
		x96=((((-1.0)*x18*x79))+(((-1.0)*x11*x58)));
		x97=(((x41*x76))+x70);
		x98=(x13*x91);
		x99=(x12*x91);
		x100=((((0.229525)*x88))+(((-0.229525)*x11*x58)));
		x101=(x12*x93);
		x102=(x100*x13);
		x103=(x99+x83);
		x104=(x101+x85);
		double x105=((-1.0)*x0);
		eerot[0]=(((x104*x105*x14))+(((-1.0)*x103*x19))+(((-1.0)*x20*x97))+((x105*x15*x94)));
		eerot[1]=((((-1.0)*x20*((((x22*x73))+(((-1.0)*x99))))))+(((1.0)*x0*x15*(((((-1.0)*x22*x77))+(((1.0)*x101))))))+(((-1.0)*x19*x97))+(((-1.0)*x0*x14*x94)));
		eerot[2]=((((-1.0)*x1*x22*x91))+(((-1.0)*x0*x13*x93))+(((-1.0)*x28*x80))+(((-1.0)*x29*(((((-1.0)*x65))+((x21*x38)))))));
		double x106=((-1.0)*x3);
		double x107=((-1.0)*x1);
		double x108=((-1.0)*x0);
		eetrans[0]=((0.0640271329063695)+((x102*x108))+((x107*x87))+(((0.048790589998989)*x45*x5))+((x106*x24))+(((-1.0)*x28*x81))+(((-0.00707103562373095)*x84))+((x106*x33))+(((0.257682680200003)*x2*x8))+(((-0.048790589998989)*x2*x6))+((x108*x30*x59))+(((-0.00707109999985348)*x61))+((x107*x67))+(((-0.162299422746637)*x98))+(((-1.0)*x34*x39))+(((0.0487901458037436)*x2))+(((-0.264664201894516)*x3*x38))+(((0.00707109999985348)*x10*x71))+(((-1.0)*x32))+(((-0.264661792360626)*x63))+(((0.264661792360626)*x2*x38)));
		eerot[3]=(((x27*((((x12*x90))+x83))))+((x19*((((x12*x96))+x85))))+((x25*x95))+((x20*x92)));
		eerot[4]=(((x27*x95))+((x19*x92))+(((-1.0)*x103*x25))+(((-1.0)*x104*x20)));
		eerot[5]=(((x1*x22*x96))+((x1*x86))+(((-1.0)*x28*((x65+x49))))+((x0*x22*x90)));
		double x109=((-1.0)*x1);
		eetrans[1]=((0.259027491449184)+(((0.00707103562373095)*x61))+(((-1.0)*x31*x39))+(((0.162297945153685)*x98))+(((-1.0)*x28*x82))+(((0.048790589998989)*x2))+(((-1.0)*x29*x81))+(((0.264664201894516)*x2*x38))+(((0.0487901458037436)*x2*x6))+(((-1.0)*x34*x45))+(((-0.00707109999985348)*x84))+(((0.25768502619466)*x2*x8))+(((0.257682680200003)*x3*x8))+((x109*x30*x59))+((x0*x67))+(((0.0487901458037436)*x3))+(((-1.0)*x32*x6))+(((-0.00707103562373095)*x10*x71))+((x102*x109))+(((-0.264664201894516)*x63))+(((0.264661792360626)*x3*x38)));
		eerot[6]=(((x14*x89))+((x17*x78)));
		eerot[7]=((((-1.0)*x15*x89))+(((-1.0)*x14*x78)));
		eerot[8]=((((-1.0)*x62))+((x13*x72)));
		double x110=-0.01;
		eetrans[2]=((0.399976)+(((-0.36442)*x5))+(((0.229525)*x13*x72))+(((-0.229525)*x62))+(((-0.37429)*x36*x4))+(((-1.0)*x11*x110*x42))+(((1.0)*x18*((((x110*x44))+(((-1.0)*x110*x38*x4))))))+(((-0.069)*x4*x8))+(((-1.0)*x35*x9)));
    return eetrans;
  }
}
